{"version":3,"file":"static/js/129.d2ff2051.chunk.js","mappings":"6JAsBA,IApBe,WACb,OACE,SAAC,KAAD,CACEA,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CACZC,UAAW,MACXC,QAAS,OACTC,WAAY,OACZC,YAAa,QAEfC,aAAa,0BACbC,WAAW,UACXC,MAAM,WAGX,C,6JClBKC,EAAe,mCAAG,WAAMC,GAAN,6EACL,+BACD,mCAFM,SAICC,EAAAA,EAAAA,IAAA,UAHN,+BAGM,kBACAD,EADA,oBAFP,mCAEO,oBAJD,cAIhBE,EAJgB,yBAQfA,GARe,2CAAH,sDAWrB,I,uCCVaC,EAAiBC,EAAAA,GAAAA,IAAH,iIAMdC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8MAaVG,EAAUH,EAAAA,GAAAA,IAAH,0LASPI,EAAMJ,EAAAA,GAAAA,IAAH,2DAKHK,EAAWL,EAAAA,GAAAA,IAAH,qEAKRM,EAAYN,EAAAA,GAAAA,IAAH,wDAKTO,EAAQP,EAAAA,GAAAA,GAAH,kEAKLQ,EAAWR,EAAAA,GAAAA,EAAH,+D,SCkBrB,EAxDmB,SAAC,GAEb,IAAD,IADJS,MAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,MAAOC,EACzB,EADyBA,aAAcC,EACvC,EADuCA,SAGrCC,EAASJ,EAAW,UADV,kCAC0BA,GAAgBK,EAgB1D,OACE,UAAChB,EAAD,YACE,SAACE,EAAD,CAAYe,GAAG,IAAf,sBACA,UAACb,EAAD,YACE,SAACC,EAAD,CAAKa,IAAKH,EAAQI,IAAKP,KACvB,UAACN,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAQI,IACU,KAAjBC,IACC,UAACL,EAAD,eAvBQ,SAAAK,GAElB,OADoB,IAAIO,KAAKP,GACVQ,aACpB,CAoBoBA,CAAYR,GAArB,UAGU,KAAbC,IACC,iCACE,sCACA,SAACL,EAAD,UAAWK,QAIf,oCACA,SAACL,EAAD,WAGJ,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMQ,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,4BAKT,E,SC5BD,EAhCqB,WACnB,IAAQpB,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR,GAA0B0B,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEX9B,EAAgBC,GACbiC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAYG,MACxBV,EAASO,EAAYG,KACtB,IACAC,OAAM,SAAAR,GACLC,EAASD,EACV,IACAS,SAAQ,kBAAMV,GAAW,EAAjB,GACZ,GAAE,CAAC7B,KAGF,gCACG4B,IAAW,SAACY,EAAA,EAAD,IACXV,IAAS,wBAAKA,EAAMW,WACnBb,IAAW,SAAC,EAAD,CAAYf,MAAOA,KAChC,SAAC,EAAA6B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/loader/Loader.jsx","services/GetMovieDetails.jsx","components/aboutMovie/AboutMovie.styled.jsx","components/aboutMovie/AboutMovie.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{\n        marginTop: '100',\n        display: 'flex',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#c0efff\"\n      color=\"#e15b64\"\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst GetMovieDetails = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport default GetMovieDetails;\n","import styled from 'styled-components';\nimport { Link as LinkBack } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  margin-top: 15px;\n  border-bottom: 1px solid lightgray;\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\n`;\n\nexport const LinkBackTo = styled(LinkBack)`\n  border: 1px solid black;\n  padding: 4px;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n  font-size: 14px;\n\n  &:hover {\n    border-color: red;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid lightgray;\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 350px;\n`;\n\nexport const WrapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const WrapTitle = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n\nexport const Overview = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n","import { Link } from 'react-router-dom';\nimport noPoster from '../../images/no-poster.jpg';\nimport {\n  MovieContainer,\n  LinkBackTo,\n  Wrapper,\n  Img,\n  WrapInfo,\n  Title,\n  Overview,\n  WrapTitle,\n} from './AboutMovie.styled';\n\nconst AboutMovie = ({\n  movie: { poster_path, title, release_date, overview },\n}) => {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const imgUrl = poster_path ? `${IMG_URL + poster_path}` : noPoster;\n\n  const getFullYear = release_date => {\n    const dateRelease = new Date(release_date);\n    return dateRelease.getFullYear();\n  };\n\n  // const findGenres = (genres, genre, newGenre) => {\n  //   genres.forEach(el => {\n  //     genre.forEach(({ id, name }) => {\n  //       if (el === id) {\n  //         newGenre.push(name);\n  //       }\n  //     });\n  //   });\n\n  return (\n    <MovieContainer>\n      <LinkBackTo to=\"/\">Go back</LinkBackTo>\n      <Wrapper>\n        <Img src={imgUrl} alt={title} />\n        <WrapInfo>\n          <WrapTitle>\n            <Title>{title}</Title>\n            {release_date !== '' && (\n              <Title>({getFullYear(release_date)})</Title>\n            )}\n          </WrapTitle>\n          {overview !== '' && (\n            <>\n              <h3>Overview</h3>\n              <Overview>{overview}</Overview>\n            </>\n          )}\n\n          <h3>Genres</h3>\n          <Overview></Overview>\n        </WrapInfo>\n      </Wrapper>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </MovieContainer>\n  );\n};\n\nexport default AboutMovie;\n","import { Suspense } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport GetMovieDetails from '../services/GetMovieDetails';\nimport AboutMovie from '../components/aboutMovie/AboutMovie';\nimport Loader from '../components/loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    GetMovieDetails(movieId)\n      .then(respMovieId => {\n        console.log(respMovieId.data);\n        setMovie(respMovieId.data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      {!loading && <AboutMovie movie={movie} />}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["visible","height","width","ariaLabel","wrapperStyle","marginTop","display","marginLeft","marginRight","wrapperClass","glassColor","color","GetMovieDetails","movieId","axios","response","MovieContainer","styled","LinkBackTo","LinkBack","Wrapper","Img","WrapInfo","WrapTitle","Title","Overview","movie","poster_path","title","release_date","overview","imgUrl","noPoster","to","src","alt","Date","getFullYear","useParams","useState","setMovie","loading","setLoading","error","setError","useEffect","then","respMovieId","console","log","data","catch","finally","Loader","message","Suspense","fallback"],"sourceRoot":""}