{"version":3,"file":"static/js/879.a272fa31.chunk.js","mappings":"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","sources":["components/buttonUp/ButtonUp.styled.jsx","components/buttonUp/ButtonUp.jsx","components/movieList/MovieList.styled.jsx","components/movieList/MovieList.jsx","services/GetTrending.jsx","components/button/Button.styled.jsx","components/button/Button.jsx","pages/home/Home.styled.jsx","pages/home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BtnUp = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 2%;\r\n  bottom: 10%;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background-color: inherit;\r\n  border: none;\r\n\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.15);\r\n    color: red;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BsArrowUpCircle } from 'react-icons/bs';\r\nimport { BtnUp } from './ButtonUp.styled';\r\n\r\nconst ButtonTop = ({ onClick }) => {\r\n  return (\r\n    <BtnUp type=\"button\" onClick={onClick}>\r\n      <BsArrowUpCircle size={30} />\r\n    </BtnUp>\r\n  );\r\n};\r\n\r\nButtonTop.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  gap: 30px;\r\n  row-gap: 90px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  width: 210px;\r\n  height: 310px;\r\n  > a {\r\n    width: 210px;\r\n    height: 310px;\r\n    text-decoration: none;\r\n    color: black;\r\n    width: 200px;\r\n\r\n    &:hover {\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const MovieName = styled.p`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport noPoster from '../../images/no-poster.jpg';\r\nimport { List, ListItem, Img, MovieName } from './MovieList.styled';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  return (\r\n    <List>\r\n      {movies.map(movie => (\r\n        <ListItem key={movie.id}>\r\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n            {movie.poster_path !== null && (\r\n              <Img\r\n                src={`${IMG_URL + movie.poster_path}`}\r\n                alt={movie.title}\r\n                width=\"200\"\r\n              />\r\n            )}\r\n            {movie.poster_path === null && (\r\n              <img src={noPoster} alt={movie.title} />\r\n            )}\r\n            <MovieName>\r\n              {movie.title}\r\n              {movie.name}\r\n            </MovieName>\r\n          </Link>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      poster_path: PropTypes.string,\r\n      title: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }).isRequired\r\n  ),\r\n};\r\n\r\nexport default MovieList;\r\n","import axios from 'axios';\r\n\r\nconst GetTrending = async page => {\r\n  const BASE_URL = 'https://api.themoviedb.org/3';\r\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\r\n\r\n  const response = await axios.get(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport default GetTrending;\r\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n  margin-top: 80px;\r\n  padding: 6px 14px;\r\n  font-size: 15px;\r\n  margin-bottom: 40px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 2px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  background-color: #fff;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  border: 1px solid black;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: black;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 8px 16px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  &:hover {\r\n    border-color: red;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Btn } from './Button.styled';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <Btn type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </Btn>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nexport const ErrorMessage = styled.h2`\r\n  font-family: inherit;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useWindowScroll } from 'react-use';\r\nimport GetTrending from '../../services/GetTrending';\r\nimport Loader from '../../components/loader/Loader';\r\nimport Button from '../../components/button/Button';\r\nimport ButtonUp from '../../components/buttonUp/ButtonUp';\r\nimport MovieList from '../../components/movieList/MovieList';\r\nimport { Title, ErrorMessage } from './Home.styled';\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [totalResults, setTotalResults] = useState(null);\r\n  const BtnRef = useRef();\r\n  const { y } = useWindowScroll();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    GetTrending(page)\r\n      .then(respMovies => {\r\n        return (\r\n          page === 1\r\n            ? setMovies(respMovies.data.results)\r\n            : setMovies(prevMovies => [\r\n                ...prevMovies,\r\n                ...respMovies.data.results,\r\n              ]),\r\n          setTotalResults(respMovies.data.total_results)\r\n        );\r\n      })\r\n      .catch(error => setError(error))\r\n      .finally(() => setLoading(false));\r\n  }, [page]);\r\n\r\n  const handleButton = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const handleButtonTop = () => {\r\n    const { top } = BtnRef.current.getBoundingClientRect();\r\n    window.scrollTo({\r\n      top,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title ref={BtnRef}>Trending today</Title>\r\n      {loading && <Loader />}\r\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\r\n      <MovieList movies={movies} />\r\n      {movies.length < totalResults && <Button onClick={handleButton} />}\r\n      {y > 500 && <ButtonUp onClick={handleButtonTop} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["BtnUp","styled","onClick","type","size","List","ListItem","Img","MovieName","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","width","noPoster","name","GetTrending","page","axios","response","Btn","Title","ErrorMessage","useState","setMovies","setPage","loading","setLoading","error","setError","totalResults","setTotalResults","BtnRef","useRef","y","useWindowScroll","useEffect","then","respMovies","data","results","prevMovies","total_results","catch","finally","ref","Loader","message","MovieList","length","prevPage","ButtonUp","top","current","getBoundingClientRect","window","scrollTo","behavior"],"sourceRoot":""}