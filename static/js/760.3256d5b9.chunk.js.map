{"version":3,"file":"static/js/760.3256d5b9.chunk.js","mappings":"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","sources":["services/GetMovieDetails.jsx","components/aboutMovie/AboutMovie.styled.jsx","components/aboutMovie/AboutMovie.jsx","pages/movieDetails/MovieDetails.styled.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst GetMovieDetails = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport default GetMovieDetails;\n","import styled from 'styled-components';\nimport { Link as LinkBack } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const LinkBackTo = styled(LinkBack)`\n  padding: 8px 16px;\n  border-radius: 2px;\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    border-color: red;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid lightgray;\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  height: 350px;\n`;\n\nexport const WrapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const WrapTitle = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n\nexport const Overview = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n","import { useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from '../../images/no-poster.jpg';\nimport {\n  MovieContainer,\n  LinkBackTo,\n  Wrapper,\n  Img,\n  WrapInfo,\n  Title,\n  Overview,\n  WrapTitle,\n} from './AboutMovie.styled';\n\nconst AboutMovie = ({\n  movie: { poster_path, title, release_date, overview, genres },\n}) => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const imgUrl = poster_path ? `${IMG_URL + poster_path}` : noPoster;\n\n  const getFullYear = () => {\n    const dateRelease = new Date(release_date);\n    return dateRelease.getFullYear();\n  };\n\n  // const findGenreName = () => {\n  //   const genresArr = [];\n\n  //   // genres.forEach(({ name }) => {\n  //   //   findGenres.push(name);\n  //   // });\n\n  //   for (const genre of genres) {\n  //     genresArr.push(genre.name);\n  //   }\n  //   // return genresArr;\n  //   console.log(genresArr);\n  // };\n\n  return (\n    <MovieContainer>\n      <LinkBackTo to={backLinkLocationRef.current}>Go back</LinkBackTo>\n      <Wrapper>\n        <Img src={imgUrl} alt={title} />\n        <WrapInfo>\n          <WrapTitle>\n            <Title>{title}</Title>\n            {release_date !== '' && (\n              <Title>({getFullYear(release_date)})</Title>\n            )}\n          </WrapTitle>\n          {overview !== '' && (\n            <>\n              <h3>Overview</h3>\n              <Overview>{overview}</Overview>\n            </>\n          )}\n          {/* {genres.length > 0 && (\n            <> */}\n          <h3>Genres</h3>\n          <Overview></Overview>\n          {/* </>\n          )} */}\n        </WrapInfo>\n      </Wrapper>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </MovieContainer>\n  );\n};\n\nAboutMovie.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AboutMovie;\n","import styled from 'styled-components';\nimport { Link as LinkBackTo } from 'react-router-dom';\n\nexport const ErrorWrap = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ErrorTitle = styled.h2`\n  text-align: center;\n  font-family: inherit;\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const LinkToBack = styled(LinkBackTo)`\n  padding: 8px 16px;\n  border-radius: 2px;\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    border-color: red;\n  }\n`;\n","import { Suspense, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport GetMovieDetails from '../../services/GetMovieDetails';\nimport AboutMovie from '../../components/aboutMovie/AboutMovie';\nimport Loader from '../../components/loader/Loader';\nimport { ErrorTitle } from './MovieDetails.styled';\nimport { ErrorWrap, LinkToBack } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  console.log(location);\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n\n    GetMovieDetails(movieId)\n      .then(respMovieId => {\n        console.log(respMovieId);\n        setMovie(respMovieId.data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && (\n        <ErrorWrap>\n          <LinkToBack to={backLinkLocationRef.current}>Go back</LinkToBack>\n          <ErrorTitle>{error.message}</ErrorTitle>\n        </ErrorWrap>\n      )}\n      {!loading && !error && <AboutMovie movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["GetMovieDetails","movieId","axios","response","MovieContainer","styled","LinkBackTo","LinkBack","Wrapper","Img","WrapInfo","WrapTitle","Title","Overview","movie","poster_path","title","release_date","overview","location","genres","useLocation","backLinkLocationRef","useRef","state","from","imgUrl","noPoster","to","current","src","alt","Date","getFullYear","ErrorWrap","ErrorTitle","LinkToBack","useParams","useState","setMovie","loading","setLoading","error","setError","console","log","useEffect","then","respMovieId","data","catch","finally","Loader","message","Suspense","fallback"],"sourceRoot":""}