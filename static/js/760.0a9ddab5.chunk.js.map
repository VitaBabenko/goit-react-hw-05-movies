{"version":3,"file":"static/js/760.0a9ddab5.chunk.js","mappings":"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","sources":["components/buttonUp/ButtonUp.styled.jsx","components/buttonUp/ButtonUp.jsx","services/GetMovieDetails.jsx","components/aboutMovie/AboutMovie.styled.jsx","components/aboutMovie/AboutMovie.jsx","pages/movieDetails/MovieDetails.styled.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BtnUp = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  right: 2%;\r\n  bottom: 10%;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background-color: inherit;\r\n  border: none;\r\n\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.15);\r\n    color: red;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BsArrowUpCircle } from 'react-icons/bs';\r\nimport { BtnUp } from './ButtonUp.styled';\r\n\r\nconst ButtonTop = ({ onClick }) => {\r\n  return (\r\n    <BtnUp type=\"button\" onClick={onClick}>\r\n      <BsArrowUpCircle size={30} />\r\n    </BtnUp>\r\n  );\r\n};\r\n\r\nButtonTop.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonTop;\r\n","import axios from 'axios';\r\n\r\nconst GetMovieDetails = async movieId => {\r\n  const BASE_URL = 'https://api.themoviedb.org/3';\r\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\r\n\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport default GetMovieDetails;\r\n","import styled from 'styled-components';\r\nimport { Link as LinkBack } from 'react-router-dom';\r\nimport { Link as LinkInfo } from 'react-router-dom';\r\n\r\nexport const MovieContainer = styled.div`\r\n  @media (max-width: 767px) {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 300px;\r\n    border-bottom: 1px solid lightgray;\r\n    box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    border-bottom: 1px solid lightgray;\r\n    box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\r\n    padding-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const LinkBackTo = styled(LinkBack)`\r\n  justify-content: flex-start;\r\n  text-align: center;\r\n  width: 100px;\r\n  font-size: 12px;\r\n  padding: 6px 14px;\r\n  border-radius: 2px;\r\n  border: 1px solid black;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: black;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  line-height: 24px;\r\n  font-weight: 500;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 8px 16px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  &:hover {\r\n    border-color: red;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid lightgray;\r\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\r\n\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  @media (max-width: 767px) {\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  width: 270px;\r\n  height: 350px;\r\n`;\r\n\r\nexport const WrapInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-left: 20px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const WrapName = styled.div`\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const WrapTitle = styled.div`\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const TitleMovie = styled.h2`\r\n  font-size: 28px;\r\n  margin-bottom: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 6px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    font-size: 30px;\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 22px;\r\n\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const TitleOverview = styled.h3`\r\n  font-size: 16px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  padding: 5px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-left: 0;\r\n  }\r\n`;\r\n\r\nexport const TitleInfo = styled.h3`\r\n  margin-top: 0;\r\n`;\r\n\r\nexport const InfoWrap = styled.div`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n\r\n  @media (min-width: 768px) {\r\n    text-align: left;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    list-style: circle;\r\n    padding-left: 30px;\r\n  }\r\n`;\r\n\r\nexport const LinkList = styled(LinkInfo)`\r\n  text-decoration: none;\r\n  color: black;\r\n\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`;\r\n","import { useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useWindowScroll } from 'react-use';\r\nimport ButtonUp from '../buttonUp/ButtonUp';\r\nimport PropTypes from 'prop-types';\r\nimport noPoster from '../../images/no-poster.jpg';\r\nimport {\r\n  MovieContainer,\r\n  LinkBackTo,\r\n  Wrapper,\r\n  Img,\r\n  WrapInfo,\r\n  TitleMovie,\r\n  Title,\r\n  TitleOverview,\r\n  Overview,\r\n  WrapName,\r\n  WrapTitle,\r\n  InfoWrap,\r\n  List,\r\n  LinkList,\r\n  TitleInfo,\r\n} from './AboutMovie.styled';\r\n\r\nconst AboutMovie = ({\r\n  movie: { poster_path, title, release_date, genres, overview, vote_average },\r\n}) => {\r\n  const location = useLocation();\r\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\r\n  const BtnRef = useRef();\r\n  const { y } = useWindowScroll();\r\n\r\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n  const imgUrl = poster_path ? `${IMG_URL + poster_path}` : noPoster;\r\n\r\n  const getFullYear = () => {\r\n    const dateRelease = new Date(release_date);\r\n    return dateRelease.getFullYear();\r\n  };\r\n\r\n  const findGenreName = genres => {\r\n    if (!genres) {\r\n      return;\r\n    }\r\n    let newArr = [];\r\n    genres.forEach(genre => newArr.push(genre.name));\r\n    return newArr.join(', ');\r\n  };\r\n\r\n  const handleButtonTop = () => {\r\n    const { top } = BtnRef.current.getBoundingClientRect();\r\n    window.scrollTo({\r\n      top,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MovieContainer ref={BtnRef}>\r\n      <LinkBackTo to={backLinkLocationRef.current}>Go back</LinkBackTo>\r\n      <Wrapper>\r\n        <Img src={imgUrl} alt={title} />\r\n        <WrapInfo>\r\n          <WrapName>\r\n            <WrapTitle>\r\n              <TitleMovie>{title}</TitleMovie>\r\n              {release_date !== '' && (\r\n                <Title>({getFullYear(release_date)})</Title>\r\n              )}{' '}\r\n            </WrapTitle>\r\n            <Title>{findGenreName(genres)}</Title>\r\n          </WrapName>\r\n          {overview !== '' && (\r\n            <>\r\n              <TitleOverview>Overview:</TitleOverview>\r\n              <Overview>{overview}</Overview>\r\n            </>\r\n          )}\r\n          <TitleOverview>Vote-average: {vote_average}</TitleOverview>\r\n        </WrapInfo>\r\n      </Wrapper>\r\n      <InfoWrap>\r\n        <TitleInfo>Additional information</TitleInfo>\r\n        <List>\r\n          <li>\r\n            <LinkList to=\"cast\" state={{ from: location }}>\r\n              Cast\r\n            </LinkList>\r\n          </li>\r\n          <li>\r\n            <LinkList to=\"reviews\" state={{ from: location }}>\r\n              Reviews\r\n            </LinkList>\r\n          </li>\r\n        </List>\r\n      </InfoWrap>\r\n      {y > 500 && <ButtonUp onClick={handleButtonTop} />}\r\n    </MovieContainer>\r\n  );\r\n};\r\n\r\nAboutMovie.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string,\r\n      })\r\n    ),\r\n    overview: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default AboutMovie;\r\n","import styled from 'styled-components';\r\nimport { Link as LinkBackTo } from 'react-router-dom';\r\n\r\nexport const ErrorWrap = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const ErrorTitle = styled.h2`\r\n  text-align: center;\r\n  font-family: inherit;\r\n  font-size: 20px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const LinkToBack = styled(LinkBackTo)`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  border: 1px solid black;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: black;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover {\r\n    border-color: red;\r\n  }\r\n`;\r\n","import { Suspense, useRef } from 'react';\r\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport GetMovieDetails from '../../services/GetMovieDetails';\r\nimport AboutMovie from '../../components/aboutMovie/AboutMovie';\r\nimport Loader from '../../components/loader/Loader';\r\nimport { ErrorTitle } from './MovieDetails.styled';\r\nimport { ErrorWrap, LinkToBack } from './MovieDetails.styled';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    GetMovieDetails(movieId)\r\n      .then(respMovieId => {\r\n        setMovie(respMovieId.data);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      {error && (\r\n        <ErrorWrap>\r\n          <LinkToBack to={backLinkLocationRef.current}>Go back</LinkToBack>\r\n          <ErrorTitle>{error.message}</ErrorTitle>\r\n        </ErrorWrap>\r\n      )}\r\n      {!loading && !error && <AboutMovie movie={movie} />}\r\n      <Suspense fallback={<Loader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"names":["BtnUp","styled","onClick","type","size","GetMovieDetails","movieId","axios","response","MovieContainer","LinkBackTo","LinkBack","Wrapper","Img","WrapInfo","WrapName","WrapTitle","TitleMovie","Title","TitleOverview","Overview","TitleInfo","InfoWrap","List","LinkList","LinkInfo","movie","poster_path","title","release_date","genres","overview","vote_average","location","useLocation","backLinkLocationRef","useRef","state","from","BtnRef","y","useWindowScroll","imgUrl","noPoster","ref","to","current","src","alt","Date","getFullYear","newArr","forEach","genre","push","name","join","findGenreName","ButtonUp","top","getBoundingClientRect","window","scrollTo","behavior","ErrorWrap","ErrorTitle","LinkToBack","useParams","useState","setMovie","loading","setLoading","error","setError","useEffect","then","respMovieId","data","catch","finally","Loader","message","Suspense","fallback"],"sourceRoot":""}