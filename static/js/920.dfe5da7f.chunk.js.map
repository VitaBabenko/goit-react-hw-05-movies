{"version":3,"file":"static/js/920.dfe5da7f.chunk.js","mappings":"4LA0CA,IArCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACyB,OAAtBG,EAAMK,cACL,SAAC,KAAD,CAAKC,IAAG,UARJ,kCAQmBN,EAAMK,aAAeE,IAAKP,EAAMQ,QAElC,OAAtBR,EAAMK,cACL,gBAAKC,IAAKG,EAAUF,IAAKP,EAAMQ,SAEjC,UAAC,KAAD,WACGR,EAAMQ,MACNR,EAAMU,YAVEV,EAAME,GADN,KAkBtB,C,6OC5BYS,EAAOC,EAAAA,GAAAA,GAAH,0KAUJC,EAAWD,EAAAA,GAAAA,GAAH,mJAYRE,EAAMF,EAAAA,GAAAA,IAAH,uJASHG,EAAYH,EAAAA,GAAAA,EAAH,oHAQTI,EAAOJ,EAAAA,GAAAA,KAAH,6CAIJK,EAAQL,EAAAA,GAAAA,MAAH,0DAKLM,EAAMN,EAAAA,GAAAA,OAAH,4D,+IChDVO,EAAW,mCAAG,WAAMC,GAAN,6EACD,+BACD,mCAFE,SAIKC,EAAAA,EAAAA,IAAA,UAHN,+BAGM,qCAFP,mCAEO,iBACmCD,IALxC,cAIZE,EAJY,yBAQXA,GARW,2CAAH,sDAWjB,I,6BCXaC,E,QAAQX,GAAAA,GAAH,+C,SCgElB,EA3Da,WACX,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAAeD,EAAAA,EAAAA,UAAS,GAAjBJ,GAAP,eACA,GAA8BI,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAyBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEXR,EAAYC,GACTW,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,EAAWG,MAEnBV,EADY,IAATL,EACOY,EAAWG,KAAKC,QAChB,SAAAC,GAAU,wBACfA,IADe,OAEfL,EAAWG,KAAKC,SAFD,EAKzB,IACAE,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACXW,SAAQ,kBAAMZ,GAAW,EAAjB,GACZ,GAAE,CAACP,KAOF,iCACE,SAACG,EAAD,6BACCG,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,wBAAKA,EAAMa,UACpB7C,IAAU,SAAC8C,EAAA,EAAD,CAAW9C,OAAQA,MAuBnC,C","sources":["components/movieList/MovieList.jsx","components/movieList/MovieList.styled.jsx","services/GetTrending.jsx","pages/home/Home.styled.jsx","pages/home/Home.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport noPoster from '../../images/no-poster.jpg';\nimport { List, ListItem, Img, MovieName } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path !== null && (\n              <Img src={`${IMG_URL + movie.poster_path}`} alt={movie.title} />\n            )}\n            {movie.poster_path === null && (\n              <img src={noPoster} alt={movie.title} />\n            )}\n            <MovieName>\n              {movie.title}\n              {movie.name}\n            </MovieName>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  padding-left: 5px;\n  padding-right: 5px;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  > a {\n    text-decoration: none;\n    color: black;\n    width: 200px;\n\n    &:hover {\n      color: red;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieName = styled.p`\n  width: 200px;\n  font-size: 18px;\n  text-align: center;\n  margin: 0;\n  padding: 10px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 25px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  height: 25px;\n`;\n","import axios from 'axios';\n\nconst GetTrending = async page => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response;\n};\n\nexport default GetTrending;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport GetTrending from '../../services/GetTrending';\nimport Loader from '../../components/loader/Loader';\nimport MovieList from '../../components/movieList/MovieList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [setTotalResults] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    GetTrending(page)\n      .then(respMovies => {\n        console.log(respMovies.data);\n        return page === 1\n          ? setMovies(respMovies.data.results)\n          : setMovies(prevMovies => [\n              ...prevMovies,\n              ...respMovies.data.results,\n            ]);\n        // setTotalResults(respMovies.data.total_results)\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [page]);\n\n  // const FetchMoreData = () => {\n  //   setPage(prevPage => prevPage + 1);\n  // };\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {loading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      {movies && <MovieList movies={movies} />}\n      {/* <div\n        id=\"scrollableDiv\"\n        style={{\n          height: 300,\n          overflow: 'auto',\n          display: 'flex',\n          flexDirection: 'column-reverse',\n        }}\n      >\n        <InfiniteScroll\n          dataLength={movies.length}\n          next={FetchMoreData}\n          style={{ display: 'flex', flexDirection: 'column-reverse' }}\n          inverse={true}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          scrollableTarget=\"scrollableDiv\"\n        >\n        </InfiniteScroll>\n      </div> */}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","noPoster","name","List","styled","ListItem","Img","MovieName","Form","Input","Btn","GetTrending","page","axios","response","Title","useState","setMovies","loading","setLoading","error","setError","useEffect","then","respMovies","console","log","data","results","prevMovies","catch","finally","Loader","message","MovieList"],"sourceRoot":""}