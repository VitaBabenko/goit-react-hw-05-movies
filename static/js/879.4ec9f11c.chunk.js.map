{"version":3,"file":"static/js/879.4ec9f11c.chunk.js","mappings":"oOAEaA,EAAOC,EAAAA,GAAAA,GAAH,4LAWJC,EAAWD,EAAAA,GAAAA,GAAH,0PAiBRE,EAAMF,EAAAA,GAAAA,IAAH,8LAWHG,EAAYH,EAAAA,GAAAA,EAAH,mH,SCKtB,EAzCkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,UAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACyB,OAAtBG,EAAMK,cACL,SAACX,EAAD,CACEY,IAAG,UATD,kCASgBN,EAAMK,aACxBE,IAAKP,EAAMQ,MACXC,MAAM,QAGa,OAAtBT,EAAMK,cACL,gBAAKC,IAAKI,EAAUH,IAAKP,EAAMQ,SAEjC,UAACb,EAAD,WACGK,EAAMQ,MACNR,EAAMW,YAdEX,EAAME,GADN,KAsBtB,C,iJChCKU,EAAW,mCAAG,WAAMC,GAAN,6EACD,+BACD,mCAFE,SAIKC,EAAAA,EAAAA,IAAA,UAHN,+BAGM,qCAFP,mCAEO,iBACmCD,IALxC,cAIZE,EAJY,yBAQXA,GARW,2CAAH,sDAWjB,I,6BCXaC,EAAMxB,EAAAA,GAAAA,OAAH,0xB,SCahB,EAZe,SAAC,GAAiB,IAAfyB,EAAc,EAAdA,QAChB,OACE,SAACD,EAAD,CAAKE,KAAK,SAASD,QAASA,EAA5B,sBAIH,E,UCPYE,EAAQ3B,EAAAA,GAAAA,GAAH,+CC+ClB,EA1Ca,WACX,OAA4B4B,EAAAA,EAAAA,UAAS,IAArC,eAAOxB,EAAP,KAAeyB,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOP,EAAP,KAAaS,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCN,EAAAA,EAAAA,UAAS,MAAjD,eAAOO,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,GAEXZ,EAAYC,GACTiB,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,EAAWG,MAGjBb,EADK,IAATR,EACckB,EAAWG,KAAKC,QAChB,SAAAC,GAAU,wBACfA,IADe,OAEfL,EAAWG,KAAKC,SAFD,GAIxBP,EAAgBG,EAAWG,KAAKG,cAEnC,IACAC,OAAM,SAAAb,GAAK,OAAIC,EAASD,EAAb,IACXc,SAAQ,kBAAMf,GAAW,EAAjB,GACZ,GAAE,CAACX,IAMJ,OACE,iCACE,SAACM,EAAD,6BACCI,IAAW,SAACiB,EAAA,EAAD,IACXf,IAAS,wBAAKA,EAAMgB,WACrB,SAACC,EAAA,EAAD,CAAW9C,OAAQA,IAClBA,EAAO+C,OAAShB,IAAgB,SAAC,EAAD,CAAQV,QAVxB,WACnBK,GAAQ,SAAAsB,GAAQ,OAAIA,EAAW,CAAf,GACjB,MAWF,C","sources":["components/movieList/MovieList.styled.jsx","components/movieList/MovieList.jsx","services/GetTrending.jsx","components/button/Button.styled.jsx","components/button/Button.jsx","pages/home/Home.styled.jsx","pages/home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  row-gap: 90px;\n  padding-left: 5px;\n  padding-right: 5px;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 210px;\n  height: 310px;\n  > a {\n    width: 210px;\n    height: 310px;\n    /* margin-top: 50px; */\n    text-decoration: none;\n    color: black;\n    width: 200px;\n\n    &:hover {\n      color: red;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  /* width: 200px; */\n  width: 100%;\n  height: 100%;\n  transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieName = styled.p`\n  width: 100%;\n  font-size: 18px;\n  text-align: center;\n  margin: 0;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport noPoster from '../../images/no-poster.jpg';\nimport { List, ListItem, Img, MovieName } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path !== null && (\n              <Img\n                src={`${IMG_URL + movie.poster_path}`}\n                alt={movie.title}\n                width=\"200\"\n              />\n            )}\n            {movie.poster_path === null && (\n              <img src={noPoster} alt={movie.title} />\n            )}\n            <MovieName>\n              {movie.title}\n              {movie.name}\n            </MovieName>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst GetTrending = async page => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response;\n};\n\nexport default GetTrending;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  /* margin-top: 70px; */\n  margin-top: 80px;\n  padding: 6px 14px;\n  font-size: 15px;\n  margin-bottom: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 8px 16px; */\n  border-radius: 2px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  cursor: pointer;\n  font-family: inherit;\n  /* font-size: 18px; */\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  background-color: #fff;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n\n  &:hover {\n    border-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ onClick }) => {\n  return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport GetTrending from '../../services/GetTrending';\nimport Loader from '../../components/loader/Loader';\nimport Button from '../../components/button/Button';\nimport MovieList from '../../components/movieList/MovieList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalResults, setTotalResults] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    GetTrending(page)\n      .then(respMovies => {\n        console.log(respMovies.data);\n        return (\n          page === 1\n            ? setMovies(respMovies.data.results)\n            : setMovies(prevMovies => [\n                ...prevMovies,\n                ...respMovies.data.results,\n              ]),\n          setTotalResults(respMovies.data.total_results)\n        );\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [page]);\n\n  const handleButton = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {loading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      <MovieList movies={movies} />\n      {movies.length < totalResults && <Button onClick={handleButton} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","ListItem","Img","MovieName","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","width","noPoster","name","GetTrending","page","axios","response","Btn","onClick","type","Title","useState","setMovies","setPage","loading","setLoading","error","setError","totalResults","setTotalResults","useEffect","then","respMovies","console","log","data","results","prevMovies","total_results","catch","finally","Loader","message","MovieList","length","prevPage"],"sourceRoot":""}