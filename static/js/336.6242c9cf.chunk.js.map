{"version":3,"file":"static/js/336.6242c9cf.chunk.js","mappings":"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","sources":["components/button/Button.styled.jsx","components/button/Button.jsx","components/movieList/MovieList.styled.jsx","components/movieList/MovieList.jsx","pages/movies/Movies.styled.jsx","services/GetSearchMovieByKeyword.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  margin-top: 70px;\n  margin-bottom: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  background-color: #fff;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n\n  &:hover {\n    border-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ onClick }) => {\n  return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  row-gap: 90px;\n  padding-left: 5px;\n  padding-right: 5px;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 210px;\n  height: 310px;\n  > a {\n    width: 210px;\n    height: 310px;\n    /* margin-top: 50px; */\n    text-decoration: none;\n    color: black;\n    width: 200px;\n\n    &:hover {\n      color: red;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  /* width: 200px; */\n  width: 100%;\n  height: 100%;\n  transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const MovieName = styled.p`\n  width: 100%;\n  font-size: 18px;\n  text-align: center;\n  margin: 0;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport noPoster from '../../images/no-poster.jpg';\nimport { List, ListItem, Img, MovieName } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <ListItem key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path !== null && (\n              <Img\n                src={`${IMG_URL + movie.poster_path}`}\n                alt={movie.title}\n                width=\"200\"\n              />\n            )}\n            {movie.poster_path === null && (\n              <img src={noPoster} alt={movie.title} />\n            )}\n            <MovieName>\n              {movie.title}\n              {movie.name}\n            </MovieName>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 25px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 25px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  height: 25px;\n`;\n","import axios from 'axios';\n\nconst GetSearchMovieByKeyword = async (searchQuery, page) => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${page}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response;\n};\n\nexport default GetSearchMovieByKeyword;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from '../../components/loader/Loader';\nimport Button from '../../components/button/Button';\nimport MovieList from '../../components/movieList/MovieList';\nimport { Form, Input, Btn } from './Movies.styled';\nimport GetSearchMovieByKeyword from '../../services/GetSearchMovieByKeyword';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalResults, setTotalResults] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n\n  console.log(movieId);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    setLoading(true);\n\n    GetSearchMovieByKeyword(movieId.trim(), page)\n      .then(respData => {\n        console.log(respData.data);\n        return (\n          page === 1\n            ? setMovies(respData.data.results)\n            : setMovies(prevMovies => [\n                ...prevMovies,\n                ...respData.data.results,\n              ]),\n          setTotalResults(respData.data.total_results)\n        );\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId, page]);\n\n  const updateQueryString = evt => {\n    evt.preventDefault();\n    const movieIdValue = evt.currentTarget.elements.movieId.value;\n    if (movieIdValue.trim() === '') {\n      setSearchParams({});\n      alert('Fill out the field, please.');\n      return;\n    }\n    setSearchParams({ movieId: movieIdValue });\n    setPage(1);\n    setMovies([]);\n    setTotalResults(null);\n    evt.currentTarget.reset();\n  };\n\n  const handleButton = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <Form onSubmit={updateQueryString}>\n        <Input\n          type=\"text\"\n          name=\"movieId\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Btn type=\"submit\">\n          <span>Search</span>\n        </Btn>\n      </Form>\n      {loading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      {movies && !loading && <MovieList movies={movies} />}\n      {movies.length < totalResults && !loading && (\n        <Button onClick={handleButton} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Btn","styled","onClick","type","List","ListItem","Img","MovieName","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","width","noPoster","name","Form","Input","GetSearchMovieByKeyword","searchQuery","page","axios","response","useState","setMovies","setPage","loading","setLoading","error","setError","totalResults","setTotalResults","useSearchParams","searchParams","setSearchParams","movieId","get","console","log","useEffect","trim","then","respData","data","results","prevMovies","total_results","catch","finally","onSubmit","evt","preventDefault","movieIdValue","currentTarget","elements","value","alert","reset","autoComplete","autoFocus","placeholder","Loader","message","MovieList","length","Button","prevPage"],"sourceRoot":""}