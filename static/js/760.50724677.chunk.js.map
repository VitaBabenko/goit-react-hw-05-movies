{"version":3,"file":"static/js/760.50724677.chunk.js","mappings":"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","sources":["components/buttonTop/ButtonTop.styled.jsx","components/buttonTop/ButtonTop.jsx","services/GetMovieDetails.jsx","components/aboutMovie/AboutMovie.styled.jsx","components/aboutMovie/AboutMovie.jsx","pages/movieDetails/MovieDetails.styled.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnTop = styled.button`\n  display: block;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  right: 2%;\n  bottom: 10%;\n  cursor: pointer;\n  background-color: inherit;\n  border: none;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.15);\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BtnTop } from './ButtonTop.styled';\nimport { BsArrowUpCircle } from 'react-icons/bs';\n\nconst ButtonTop = ({ onClick }) => {\n  return (\n    <BtnTop type=\"button\" onClick={onClick}>\n      <BsArrowUpCircle size={30} />\n    </BtnTop>\n  );\n};\n\nButtonTop.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonTop;\n","import axios from 'axios';\n\nconst GetMovieDetails = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '2ec93d095b3f7dd7321ac567053c0ad5';\n\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response;\n};\n\nexport default GetMovieDetails;\n","import styled from 'styled-components';\nimport { Link as LinkBack } from 'react-router-dom';\nimport { Link as LinkInfo } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  @media (max-width: 767px) {\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 300px;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 20px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\n\nexport const LinkBackTo = styled(LinkBack)`\n  justify-content: flex-start;\n  text-align: center;\n  width: 100px;\n  font-size: 12px;\n  padding: 6px 14px;\n  border-radius: 2px;\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  font-family: inherit;\n  line-height: 24px;\n  font-weight: 500;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  @media (min-width: 768px) {\n    padding: 8px 16px;\n    font-size: 18px;\n  }\n\n  &:hover {\n    border-color: red;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 20px;\n  text-align: center;\n  padding-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid lightgray;\n  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.1);\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Img = styled.img`\n  @media (max-width: 767px) {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  width: 270px;\n  height: 350px;\n`;\n\nexport const WrapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    margin-left: 20px;\n    text-align: left;\n  }\n`;\n\nexport const WrapTitle = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n\n  margin-top: 10px;\n  margin-bottom: 0;\n`;\n\nexport const TitleOverview = styled.h3`\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Overview = styled.p`\n  padding: 5px;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  @media (min-width: 768px) {\n    padding-left: 0;\n  }\n`;\n\nexport const TitleInfo = styled.h3`\n  margin-top: 0;\n`;\n\nexport const InfoWrap = styled.div`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    text-align: left;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  @media (min-width: 768px) {\n    list-style: circle;\n    padding-left: 30px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const LinkList = styled(LinkInfo)`\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useWindowScroll } from 'react-use';\nimport ButtonTop from '../buttonTop/ButtonTop';\nimport PropTypes from 'prop-types';\nimport noPoster from '../../images/no-poster.jpg';\nimport {\n  MovieContainer,\n  LinkBackTo,\n  Wrapper,\n  Img,\n  WrapInfo,\n  Title,\n  TitleOverview,\n  Overview,\n  WrapTitle,\n  InfoWrap,\n  List,\n  LinkList,\n  TitleInfo,\n} from './AboutMovie.styled';\n\nconst AboutMovie = ({\n  movie: { poster_path, title, release_date, overview, genres },\n}) => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const BtnRef = useRef();\n  const { y } = useWindowScroll();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const imgUrl = poster_path ? `${IMG_URL + poster_path}` : noPoster;\n\n  const getFullYear = () => {\n    const dateRelease = new Date(release_date);\n    return dateRelease.getFullYear();\n  };\n\n  const handleButtonTop = () => {\n    const { top } = BtnRef.current.getBoundingClientRect();\n    window.scrollTo({\n      top,\n      behavior: 'smooth',\n    });\n  };\n\n  // const findGenreName = () => {\n  //   const genresArr = [];\n\n  //   // genres.forEach(({ name }) => {\n  //   //   findGenres.push(name);\n  //   // });\n\n  //   for (const genre of genres) {\n  //     genresArr.push(genre.name);\n  //   }\n  //   // return genresArr;\n  //   console.log(genresArr);\n  // };\n\n  return (\n    <MovieContainer ref={BtnRef}>\n      <LinkBackTo to={backLinkLocationRef.current}>Go back</LinkBackTo>\n      <Wrapper>\n        <Img src={imgUrl} alt={title} />\n        <WrapInfo>\n          <WrapTitle>\n            <Title>{title}</Title>\n            {release_date !== '' && (\n              <Title>({getFullYear(release_date)})</Title>\n            )}\n          </WrapTitle>\n          {overview !== '' && (\n            <>\n              <TitleOverview>Overview</TitleOverview>\n              <Overview>{overview}</Overview>\n            </>\n          )}\n          {/* {genres.length > 0 && (\n            <> */}\n          <TitleOverview>Genres</TitleOverview>\n          <Overview></Overview>\n          {/* </>\n          )} */}\n        </WrapInfo>\n      </Wrapper>\n      <InfoWrap>\n        <TitleInfo>Additional information</TitleInfo>\n        <List>\n          <li>\n            <LinkList to=\"cast\" state={{ from: location }}>\n              Cast\n            </LinkList>\n          </li>\n          <li>\n            <LinkList to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </LinkList>\n          </li>\n        </List>\n      </InfoWrap>\n      {y > 500 && <ButtonTop onClick={handleButtonTop} />}\n    </MovieContainer>\n  );\n};\n\nAboutMovie.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n  }),\n};\n\nexport default AboutMovie;\n","import styled from 'styled-components';\nimport { Link as LinkBackTo } from 'react-router-dom';\n\nexport const ErrorWrap = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ErrorTitle = styled.h2`\n  text-align: center;\n  font-family: inherit;\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const LinkToBack = styled(LinkBackTo)`\n  padding: 8px 16px;\n  border-radius: 2px;\n  border: 1px solid black;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: black;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    border-color: red;\n  }\n`;\n","import { Suspense, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport GetMovieDetails from '../../services/GetMovieDetails';\nimport AboutMovie from '../../components/aboutMovie/AboutMovie';\nimport Loader from '../../components/loader/Loader';\nimport { ErrorTitle } from './MovieDetails.styled';\nimport { ErrorWrap, LinkToBack } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  console.log(location);\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n\n    GetMovieDetails(movieId)\n      .then(respMovieId => {\n        console.log(respMovieId);\n        setMovie(respMovieId.data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && (\n        <ErrorWrap>\n          <LinkToBack to={backLinkLocationRef.current}>Go back</LinkToBack>\n          <ErrorTitle>{error.message}</ErrorTitle>\n        </ErrorWrap>\n      )}\n      {!loading && !error && <AboutMovie movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BtnTop","styled","onClick","type","size","GetMovieDetails","movieId","axios","response","MovieContainer","LinkBackTo","LinkBack","Wrapper","Img","WrapInfo","WrapTitle","Title","TitleOverview","Overview","TitleInfo","InfoWrap","List","LinkList","LinkInfo","movie","poster_path","title","release_date","overview","location","genres","useLocation","backLinkLocationRef","useRef","state","from","BtnRef","y","useWindowScroll","imgUrl","noPoster","ref","to","current","src","alt","Date","getFullYear","ButtonTop","top","getBoundingClientRect","window","scrollTo","behavior","ErrorWrap","ErrorTitle","LinkToBack","useParams","useState","setMovie","loading","setLoading","error","setError","console","log","useEffect","then","respMovieId","data","catch","finally","Loader","message","Suspense","fallback"],"sourceRoot":""}